{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/don1/depend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/don1/depend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { useEthers } from './useEthers';\nimport { usePromiseTransaction } from './usePromiseTransaction';\n/**\n * @public\n */\n\nexport function useSendTransaction(options) {\n  var _useEthers = useEthers(),\n      library = _useEthers.library,\n      chainId = _useEthers.chainId;\n\n  var _usePromiseTransactio = usePromiseTransaction(chainId, options),\n      promiseTransaction = _usePromiseTransactio.promiseTransaction,\n      state = _usePromiseTransactio.state,\n      resetState = _usePromiseTransactio.resetState;\n\n  var sendTransaction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(transactionRequest) {\n      var signer;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              signer = (options === null || options === void 0 ? void 0 : options.signer) || (library === null || library === void 0 ? void 0 : library.getSigner());\n\n              if (!signer) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 4;\n              return promiseTransaction(signer.sendTransaction(transactionRequest));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendTransaction(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    sendTransaction: sendTransaction,\n    state: state,\n    resetState: resetState\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/useSendTransaction.ts"],"names":[],"mappings":";;AAEA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,qBAAT,QAAsC,yBAAtC;AAEA;;AAEG;;AACH,OAAM,SAAU,kBAAV,CAA6B,OAA7B,EAAyD;EAC7D,iBAA6B,SAAS,EAAtC;EAAA,IAAQ,OAAR,cAAQ,OAAR;EAAA,IAAiB,OAAjB,cAAiB,OAAjB;;EACA,4BAAkD,qBAAqB,CAAC,OAAD,EAAU,OAAV,CAAvE;EAAA,IAAQ,kBAAR,yBAAQ,kBAAR;EAAA,IAA4B,KAA5B,yBAA4B,KAA5B;EAAA,IAAmC,UAAnC,yBAAmC,UAAnC;;EAEA,IAAM,eAAe;IAAA,sEAAG,iBAAO,kBAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cAChB,MADgB,GACP,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,MAAT,MAAmB,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,SAAT,EAAnB,CADO;;cAAA,KAElB,MAFkB;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAGd,kBAAkB,CAAC,MAAM,CAAC,eAAP,CAAuB,kBAAvB,CAAD,CAHJ;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAf,eAAe;MAAA;IAAA;EAAA,GAArB;;EAOA,OAAO;IAAE,eAAe,EAAf,eAAF;IAAmB,KAAK,EAAL,KAAnB;IAA0B,UAAU,EAAV;EAA1B,CAAP;AACD","sourceRoot":"","sourcesContent":["import { useEthers } from './useEthers';\nimport { usePromiseTransaction } from './usePromiseTransaction';\n/**\n * @public\n */\nexport function useSendTransaction(options) {\n    const { library, chainId } = useEthers();\n    const { promiseTransaction, state, resetState } = usePromiseTransaction(chainId, options);\n    const sendTransaction = async (transactionRequest) => {\n        const signer = (options === null || options === void 0 ? void 0 : options.signer) || (library === null || library === void 0 ? void 0 : library.getSigner());\n        if (signer) {\n            await promiseTransaction(signer.sendTransaction(transactionRequest));\n        }\n    };\n    return { sendTransaction, state, resetState };\n}\n//# sourceMappingURL=useSendTransaction.js.map"]},"metadata":{},"sourceType":"module"}