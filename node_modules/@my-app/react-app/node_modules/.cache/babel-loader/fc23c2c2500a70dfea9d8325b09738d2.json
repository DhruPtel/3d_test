{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/don1/depend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/don1/depend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { useConfig, useNetwork } from '../providers';\nimport { useReadonlyNetwork } from './useReadonlyProvider';\n/**\n * @public\n */\n\nexport function useEthers() {\n  var _useNetwork = useNetwork(),\n      _useNetwork$network = _useNetwork.network,\n      networkProvider = _useNetwork$network.provider,\n      chainId = _useNetwork$network.chainId,\n      accounts = _useNetwork$network.accounts,\n      errors = _useNetwork$network.errors,\n      deactivate = _useNetwork.deactivate,\n      _activate = _useNetwork.activate,\n      activateBrowserWallet = _useNetwork.activateBrowserWallet,\n      isLoading = _useNetwork.isLoading;\n\n  var _useConfig = useConfig(),\n      networks = _useConfig.networks;\n\n  var supportedChainIds = networks === null || networks === void 0 ? void 0 : networks.map(function (network) {\n    return network.chainId;\n  });\n  var isUnsupportedChainId = chainId && supportedChainIds && supportedChainIds.indexOf(chainId) < 0;\n  var unsupportedChainIdError = new Error(\"Unsupported chain id: \".concat(chainId, \". Supported chain ids are: \").concat(supportedChainIds, \".\"));\n  unsupportedChainIdError.name = 'UnsupportedChainIdError';\n  var error = isUnsupportedChainId ? unsupportedChainIdError : errors[errors.length - 1];\n  var readonlyNetwork = useReadonlyNetwork();\n  var provider = networkProvider !== null && networkProvider !== void 0 ? networkProvider : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.provider;\n  return {\n    connector: undefined,\n    library: provider,\n    chainId: isUnsupportedChainId ? undefined : networkProvider !== undefined ? chainId : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.chainId,\n    account: accounts[0],\n    active: !!provider,\n    activate: function () {\n      var _activate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(providerOrConnector) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!('getProvider' in providerOrConnector)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.warn('Using web3-react connectors is deprecated and may lead to unexpected behavior.');\n                _context.next = 4;\n                return providerOrConnector.activate();\n\n              case 4:\n                _context.t0 = _activate;\n                _context.next = 7;\n                return providerOrConnector.getProvider();\n\n              case 7:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n              case 9:\n                return _context.abrupt(\"return\", _activate(providerOrConnector));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function activate(_x) {\n        return _activate2.apply(this, arguments);\n      }\n\n      return activate;\n    }(),\n    activateBrowserWallet: activateBrowserWallet,\n    deactivate: deactivate,\n    setError: function setError() {\n      throw new Error('setError is deprecated');\n    },\n    error: error,\n    isLoading: isLoading\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/useEthers.ts"],"names":[],"mappings":";;AACA,SAAS,SAAT,EAAoB,UAApB,QAAsC,cAAtC;AACA,SAAS,kBAAT,QAAmC,uBAAnC;AA6BA;;AAEG;;AACH,OAAM,SAAU,SAAV,GAAmB;EACvB,kBAMI,UAAU,EANd;EAAA,sCACE,OADF;EAAA,IACuB,eADvB,uBACa,QADb;EAAA,IACwC,OADxC,uBACwC,OADxC;EAAA,IACiD,QADjD,uBACiD,QADjD;EAAA,IAC2D,MAD3D,uBAC2D,MAD3D;EAAA,IAEE,UAFF,eAEE,UAFF;EAAA,IAGE,SAHF,eAGE,QAHF;EAAA,IAIE,qBAJF,eAIE,qBAJF;EAAA,IAKE,SALF,eAKE,SALF;;EAQA,iBAAqB,SAAS,EAA9B;EAAA,IAAQ,QAAR,cAAQ,QAAR;;EACA,IAAM,iBAAiB,GAAG,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,GAAV,CAAc,UAAC,OAAD;IAAA,OAAa,OAAO,CAAC,OAArB;EAAA,CAAd,CAA1B;EACA,IAAM,oBAAoB,GAAG,OAAO,IAAI,iBAAX,IAAgC,iBAAiB,CAAC,OAAlB,CAA0B,OAA1B,IAAqC,CAAlG;EACA,IAAM,uBAAuB,GAAG,IAAI,KAAJ,iCACL,OADK,wCACgC,iBADhC,OAAhC;EAGA,uBAAuB,CAAC,IAAxB,GAA+B,yBAA/B;EACA,IAAM,KAAK,GAAG,oBAAoB,GAAG,uBAAH,GAA6B,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAArE;EAEA,IAAM,eAAe,GAAG,kBAAkB,EAA1C;EACA,IAAM,QAAQ,GAAG,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAA,eAAA,GAAoB,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAA,eAAe,CAAE,QAAtD;EAEA,OAAO;IACL,SAAS,EAAE,SADN;IAEL,OAAO,EAAE,QAFJ;IAGL,OAAO,EAAE,oBAAoB,GAAG,SAAH,GAAe,eAAe,KAAK,SAApB,GAAgC,OAAhC,GAA0C,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAA,eAAe,CAAE,OAHlG;IAIL,OAAO,EAAE,QAAQ,CAAC,CAAD,CAJZ;IAKL,MAAM,EAAE,CAAC,CAAC,QALL;IAML,QAAQ;MAAA,4EAAE,iBAAO,mBAAP;QAAA;UAAA;YAAA;cAAA;gBAAA,MACJ,iBAAiB,mBADb;kBAAA;kBAAA;gBAAA;;gBAEN,OAAO,CAAC,IAAR,CAAa,gFAAb;gBAFM;gBAAA,OAGA,mBAAmB,CAAC,QAApB,EAHA;;cAAA;gBAAA,cAIC,SAJD;gBAAA;gBAAA,OAIgB,mBAAmB,CAAC,WAApB,EAJhB;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA,iCAMD,SAAQ,CAAC,mBAAD,CANP;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAF;;MAAA;QAAA;MAAA;;MAAA;IAAA,GANH;IAcL,qBAAqB,EAArB,qBAdK;IAeL,UAAU,EAAV,UAfK;IAiBL,QAAQ,EAAE,oBAAK;MACb,MAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;IACD,CAnBI;IAqBL,KAAK,EAAL,KArBK;IAsBL,SAAS,EAAT;EAtBK,CAAP;AAwBD","sourceRoot":"","sourcesContent":["import { useConfig, useNetwork } from '../providers';\nimport { useReadonlyNetwork } from './useReadonlyProvider';\n/**\n * @public\n */\nexport function useEthers() {\n    const { network: { provider: networkProvider, chainId, accounts, errors }, deactivate, activate, activateBrowserWallet, isLoading, } = useNetwork();\n    const { networks } = useConfig();\n    const supportedChainIds = networks === null || networks === void 0 ? void 0 : networks.map((network) => network.chainId);\n    const isUnsupportedChainId = chainId && supportedChainIds && supportedChainIds.indexOf(chainId) < 0;\n    const unsupportedChainIdError = new Error(`Unsupported chain id: ${chainId}. Supported chain ids are: ${supportedChainIds}.`);\n    unsupportedChainIdError.name = 'UnsupportedChainIdError';\n    const error = isUnsupportedChainId ? unsupportedChainIdError : errors[errors.length - 1];\n    const readonlyNetwork = useReadonlyNetwork();\n    const provider = networkProvider !== null && networkProvider !== void 0 ? networkProvider : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.provider;\n    return {\n        connector: undefined,\n        library: provider,\n        chainId: isUnsupportedChainId ? undefined : networkProvider !== undefined ? chainId : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.chainId,\n        account: accounts[0],\n        active: !!provider,\n        activate: async (providerOrConnector) => {\n            if ('getProvider' in providerOrConnector) {\n                console.warn('Using web3-react connectors is deprecated and may lead to unexpected behavior.');\n                await providerOrConnector.activate();\n                return activate(await providerOrConnector.getProvider());\n            }\n            return activate(providerOrConnector);\n        },\n        activateBrowserWallet,\n        deactivate,\n        setError: () => {\n            throw new Error('setError is deprecated');\n        },\n        error,\n        isLoading,\n    };\n}\n//# sourceMappingURL=useEthers.js.map"]},"metadata":{},"sourceType":"module"}