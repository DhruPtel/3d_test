{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/don1/depend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/don1/depend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Web3Provider } from '@ethersproject/providers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nexport function getInjectedProvider(_x) {\n  return _getInjectedProvider.apply(this, arguments);\n}\n\nfunction _getInjectedProvider() {\n  _getInjectedProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(pollingInterval) {\n    var injectedProvider, provider;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return detectEthereumProvider();\n\n          case 2:\n            injectedProvider = _context.sent;\n\n            if (injectedProvider) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", undefined);\n\n          case 5:\n            provider = new Web3Provider(injectedProvider, 'any');\n            provider.pollingInterval = pollingInterval;\n            return _context.abrupt(\"return\", provider);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getInjectedProvider.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/helpers/injectedProvider.ts"],"names":[],"mappings":";;AAAA,SAAS,YAAT,QAA6B,0BAA7B;AACA,OAAO,sBAAP,MAAmC,2BAAnC;AAEA,gBAAsB,mBAAtB;EAAA;AAAA;;;oFAAO,iBAAmC,eAAnC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAC+B,sBAAsB,EADrD;;UAAA;YACC,gBADD;;YAAA,IAEA,gBAFA;cAAA;cAAA;YAAA;;YAAA,iCAGI,SAHJ;;UAAA;YAMC,QAND,GAMY,IAAI,YAAJ,CAAiB,gBAAjB,EAAmC,KAAnC,CANZ;YAOL,QAAQ,CAAC,eAAT,GAA2B,eAA3B;YAPK,iCAQE,QARF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","sourceRoot":"","sourcesContent":["import { Web3Provider } from '@ethersproject/providers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nexport async function getInjectedProvider(pollingInterval) {\n    const injectedProvider = await detectEthereumProvider();\n    if (!injectedProvider) {\n        return undefined;\n    }\n    const provider = new Web3Provider(injectedProvider, 'any');\n    provider.pollingInterval = pollingInterval;\n    return provider;\n}\n//# sourceMappingURL=injectedProvider.js.map"]},"metadata":{},"sourceType":"module"}