{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/don1/depend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { ERC20Interface } from '../constants';\nimport { useCalls } from './useCall';\nimport { Contract } from 'ethers';\n/**\n * @public\n */\n\nexport function useToken(tokenAddress) {\n  var _a, _b;\n\n  var partialCall = {\n    contract: new Contract(tokenAddress || '', ERC20Interface),\n    address: tokenAddress || '',\n    args: []\n  };\n  var args = ['name', 'symbol', 'decimals', 'totalSupply'].map(function (method) {\n    return Object.assign(Object.assign({}, partialCall), {\n      method: method\n    });\n  });\n\n  var _useCalls = useCalls(args),\n      _useCalls2 = _slicedToArray(_useCalls, 4),\n      name = _useCalls2[0],\n      symbol = _useCalls2[1],\n      decimals = _useCalls2[2],\n      totalSupply = _useCalls2[3];\n\n  if (!name && !symbol && !decimals && !totalSupply) {\n    return undefined;\n  }\n\n  return {\n    name: (_a = name === null || name === void 0 ? void 0 : name.value[0]) !== null && _a !== void 0 ? _a : '',\n    symbol: (_b = symbol === null || symbol === void 0 ? void 0 : symbol.value[0]) !== null && _b !== void 0 ? _b : '',\n    decimals: decimals === null || decimals === void 0 ? void 0 : decimals.value[0],\n    totalSupply: totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply.value[0]\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/useToken.ts"],"names":[],"mappings":";AAAA,SAAS,cAAT,QAA+B,cAA/B;AAGA,SAAe,QAAf,QAA+B,WAA/B;AACA,SAAS,QAAT,QAAyB,QAAzB;AAEA;;AAEG;;AACH,OAAM,SAAU,QAAV,CAAmB,YAAnB,EAA+C;;;EACnD,IAAM,WAAW,GAAG;IAClB,QAAQ,EAAE,IAAI,QAAJ,CAAa,YAAY,IAAI,EAA7B,EAAiC,cAAjC,CADQ;IAElB,OAAO,EAAE,YAAY,IAAI,EAFP;IAGlB,IAAI,EAAE;EAHY,CAApB;EAKA,IAAM,IAAI,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,aAA/B,EAA8C,GAA9C,CAAkD,UAAC,MAAD;IAAA,OAAkB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,WAAN,CAAA,EAAiB;MAAE,MAAM,EAAN;IAAF,CAAjB,CAAlB;EAAA,CAAlD,CAAb;;EACA,gBAA8C,QAAQ,CAAC,IAAD,CAAtD;EAAA;EAAA,IAAO,IAAP;EAAA,IAAa,MAAb;EAAA,IAAqB,QAArB;EAAA,IAA+B,WAA/B;;EAEA,IAAI,CAAC,IAAD,IAAS,CAAC,MAAV,IAAoB,CAAC,QAArB,IAAiC,CAAC,WAAtC,EAAmD;IACjD,OAAO,SAAP;EACD;;EAED,OAAO;IACL,IAAI,EAAE,CAAA,EAAA,GAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,KAAN,CAAY,CAAZ,CAAA,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,EAAd,GAAkB,EADnB;IAEL,MAAM,EAAE,CAAA,EAAA,GAAA,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,KAAR,CAAc,CAAd,CAAA,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,EAAhB,GAAoB,EAFvB;IAGL,QAAQ,EAAE,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,KAAV,CAAgB,CAAhB,CAHL;IAIL,WAAW,EAAE,WAAW,KAAA,IAAX,IAAA,WAAW,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAA,WAAW,CAAE,KAAb,CAAmB,CAAnB;EAJR,CAAP;AAMD","sourceRoot":"","sourcesContent":["import { ERC20Interface } from '../constants';\nimport { useCalls } from './useCall';\nimport { Contract } from 'ethers';\n/**\n * @public\n */\nexport function useToken(tokenAddress) {\n    var _a, _b;\n    const partialCall = {\n        contract: new Contract(tokenAddress || '', ERC20Interface),\n        address: tokenAddress || '',\n        args: [],\n    };\n    const args = ['name', 'symbol', 'decimals', 'totalSupply'].map((method) => (Object.assign(Object.assign({}, partialCall), { method })));\n    const [name, symbol, decimals, totalSupply] = useCalls(args);\n    if (!name && !symbol && !decimals && !totalSupply) {\n        return undefined;\n    }\n    return {\n        name: (_a = name === null || name === void 0 ? void 0 : name.value[0]) !== null && _a !== void 0 ? _a : '',\n        symbol: (_b = symbol === null || symbol === void 0 ? void 0 : symbol.value[0]) !== null && _b !== void 0 ? _b : '',\n        decimals: decimals === null || decimals === void 0 ? void 0 : decimals.value[0],\n        totalSupply: totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply.value[0],\n    };\n}\n//# sourceMappingURL=useToken.js.map"]},"metadata":{},"sourceType":"module"}